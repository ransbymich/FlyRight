version: '3'

services:
  db:
    image: kartoza/postgis:10.0-2.4
    environment:
      - POSTGRES_PASS=postgres
      - POSTGRES_USER=postgres
    ports:
      - 5432:5432
    expose:
      - 5432
    restart: always
    volumes:
      - $HOME/postgres_data:/var/lib/postgresql
  business-logic:
    build:
      context: business-logic-server
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:8000 icarus_backend.wsgi:application
    environment:
      - DJANGO_DEBUG=disabled
      - SQL_DATABASE=gis
      - FLYRIGHT_BUILD=DEV
      - SQL_HOST=db
      - SQL_PORT=5432
      - SQL_USER=postgres
      - SQL_PASSWORD=postgres
      - SQL_ENGINE=django.contrib.gis.db.backends.postgis
      - DATABASE=postgres
      - EMAIL_ADDRESS=${EMAIL_ADDRESS}
      - EMAIL_HOST=${EMAIL_HOST}
      - SLACKBOT_WEBHOOK_URL=http://something.slack.com
      - SUPERUSER_USERNAME=admin
      - SUPERUSER_PASSWORD=password
      - SUPERUSER_EMAIL=admin@password.com
      - SLACKBOT_ENABLED=enabled
    volumes:
      - .:/usr/src/app
    ports:
      - 8000:8000
    expose:
      - 8000
  web:
    build:
      context: webapp
      dockerfile: Dockerfile
    command: yarn start
    environment:
      - HOST=0.0.0.0
      - PORT=443
      - VUE_APP_BUSINESS_LOGIC_HOST=${VUE_APP_BUSINESS_LOGIC_HOST}
      - CLIENT_ID=1
      - CLIENT_SECRET=2
    volumes:
      - .:/usr/src/app
    ports:
      - 443:443
    expose:
      - 443
  nginx:
    build: ./nginx
    environment:
      - WEBAPP_DOMAIN=flyright.police.gatech.edu
      - API_DOMAIN=flyright-api.police.gatech.edu
    ports:
      - 444:444
    expose:
      - 444
    depends_on:
      - web
      - business-logic
  redis:
    image: redis
    ports:
      - 6379:6379
  celery-worker:
    build:
      context: business-logic-server
      dockerfile: prod.Dockerfile
    command: celery worker -A icarus_backend --loglevel=debug --concurrency=1
    volumes:
      - .:/usr/src/app
    depends_on:
      - redis
    links:
      - redis
